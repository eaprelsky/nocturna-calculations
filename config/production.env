# Nocturna Calculations - Production Environment Configuration
# Copy this file to .env and update with your actual production values

# =============================================================================
# SECURITY CONFIGURATION - CHANGE THESE VALUES
# =============================================================================

# Generate a strong secret key for JWT tokens (use: openssl rand -hex 32)
SECRET_KEY=CHANGE_THIS_TO_A_SECURE_RANDOM_STRING_32_CHARS_MIN

# Admin password for initial setup (used by setup_production.py)
ADMIN_PASSWORD=CHANGE_THIS_TO_A_SECURE_ADMIN_PASSWORD

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection details
POSTGRES_DB=nocturna
POSTGRES_USER=postgres
POSTGRES_PASSWORD=CHANGE_THIS_TO_A_SECURE_DB_PASSWORD
POSTGRES_PORT=5432

# Full database URL (auto-constructed from above in Docker)
DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

REDIS_URL=redis://redis:6379/0
REDIS_PASSWORD=
REDIS_PORT=6379
REDIS_MAX_CONNECTIONS=20
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# =============================================================================
# API CONFIGURATION
# =============================================================================

# API server settings
API_PORT=8000
PROJECT_NAME=Nocturna Calculations Service
API_VERSION_PREFIX=/v1

# JWT token configuration
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=60
REFRESH_TOKEN_EXPIRE_DAYS=30

# =============================================================================
# USER MANAGEMENT - SERVICE COMPONENT CONFIGURATION
# =============================================================================

# Disable new user registration (service component mode)
ALLOW_USER_REGISTRATION=false

# Require approval for any new users (if enabled)
REGISTRATION_REQUIRES_APPROVAL=true

# Limit maximum number of users
MAX_USERS_LIMIT=100

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Configure CORS origins for your main backend and frontend
# JSON array format - update with your actual domains
CORS_ORIGINS=["https://your-main-backend.com","https://your-frontend.com","http://localhost:3000"]

# =============================================================================
# RATE LIMITING
# =============================================================================

# Requests per hour by user type
RATE_LIMIT_DEFAULT=1000
RATE_LIMIT_PREMIUM=10000
RATE_LIMIT_WINDOW=3600

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

CACHE_TTL=3600
CACHE_PREFIX=nocturna:

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

LOG_LEVEL=INFO
DEBUG=false

# =============================================================================
# SERVICE INTEGRATION
# =============================================================================

# Service token for your main backend integration (generated during setup)
SERVICE_TOKEN=

# Service user credentials (created during setup)
SERVICE_USER_EMAIL=service@nocturna.internal
SERVICE_USER_USERNAME=service_user

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Docker container settings
COMPOSE_PROJECT_NAME=nocturna
RESTART_POLICY=unless-stopped

# Health check configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3 